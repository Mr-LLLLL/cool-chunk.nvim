return {
    argument_list = "argument_list",
    class_specifier = "class_specifier",
    co_return_statement = "co_return_statement",
    default_method_clause = "default_method_clause",
    delete_method_clause = "delete_method_clause",
    for_range_loop = "for_range_loop",
    for_statement = "for_statement",
    function_declarator = "function_declarator",
    function_definition = "function_definition",
    if_statement = "if_statement",
    preproc_else = "preproc_else",
    return_statement = "return_statement",
    template_argument_list = "template_argument_list",
    template_method = "template_method",
    trailing_return_type = "trailing_return_type",
    try_statement = "try_statement",
    while_statement = "while_statement",
    ["#else"] = "#else",
    class = "class",
    co_return = "co_return",
    ["else"] = "else",
    ["for"] = "for",
    ["if"] = "if",
    mutable = "mutable",
    noexcept = "noexcept",
    ["return"] = "return",
    try = "try",
    ["while"] = "while",
}
